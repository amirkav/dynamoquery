[tool.poetry]
name = "dynamoquery"
version = "2.11.1"
description = "A Pythonic ORM for DynamoDB"
authors = ["Amir Kavousian <kav.amir@gmail.com>"]
repository = "https://github.com/amirkav/dynamoquery"
readme = "README.md"
license = "MIT License"
classifiers = [
    "Intended Audience :: Developers",
    "Environment :: Console",
    "License :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "3.11"
botocore = "*"

[tool.poetry.dev-dependencies]
codecov = "*"
pytest = "*"
pytest-cov = "*"
flake8 = "*"
isort = "*"
boto3 = "*"
black = "*"
mypy = "*"
vulture = "*"
handsdown = "*"
typing_extensions = "*"
boto3_stubs = { version = "*", extras = [
    "dynamodb",
    "application-autoscaling",
] }

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@overload",
]
ignore_errors = true
omit = ["tests/*"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["dynamoquery", "tests"]
src_paths = []

[tool.black]
line-length = 100
include = '(dynamoquery|tests|examples)/.*\.pyi?$'
target-version = ['py36', 'py37', 'py38']

[tool.pyright]
include = ["repo_checker"]
exclude = ["**/__pycache__", "tests", "typestubs"]
reportMissingImports = true
reportMissingTypeStubs = false
reportMissingTypeArgument = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportUnknownParameterType = "error"
